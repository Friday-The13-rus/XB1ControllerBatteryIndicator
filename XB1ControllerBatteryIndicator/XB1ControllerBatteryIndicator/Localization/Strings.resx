<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NewVersionAvailable_Title" xml:space="preserve">
    <value>New version available</value>
  </data>
  <data name="NewVersionAvailable_Body" xml:space="preserve">
    <value>A new version of {0} is available. Do you want to open the Homepage?</value>
  </data>
  <data name="ContextMenu_AutoStart" xml:space="preserve">
    <value>Start with Windows</value>
  </data>
  <data name="ContextMenu_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ContextMenu_UpdateCheck" xml:space="preserve">
    <value>Check for new version on start</value>
  </data>
  <data name="ToolTip_NoController" xml:space="preserve">
    <value>No controller detected</value>
  </data>
  <data name="ToolTip_WaitingForData" xml:space="preserve">
    <value>Controller {0} - Found but still waiting for battery data...</value>
  </data>
  <data name="ToolTip_Unknown" xml:space="preserve">
    <value>Controller {0} - Unknown</value>
  </data>
  <data name="ToolTip_Wired" xml:space="preserve">
    <value>Controller {0} - Wired</value>
  </data>
  <data name="ToolTip_Wireless" xml:space="preserve">
    <value>Controller {0} - Battery level: {1}</value>
  </data>
  <data name="Toast_Title" xml:space="preserve">
    <value>Controller {0} low battery warning</value>
  </data>
  <data name="Toast_Text" xml:space="preserve">
    <value>Battery of controller {0} is (almost) empty.</value>
  </data>
  <data name="Toast_Text2" xml:space="preserve">
    <value>(Click on the Button to stop the reappearing of this warning.)</value>
  </data>
  <data name="Toast_Dismiss" xml:space="preserve">
    <value>Shut up!</value>
  </data>
  <data name="BatteryLevel_Empty" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="BatteryLevel_Full" xml:space="preserve">
    <value>Full</value>
  </data>
  <data name="BatteryLevel_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="BatteryLevel_Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="ControllerIndex_Four" xml:space="preserve">
    <value>Four</value>
  </data>
  <data name="ControllerIndex_One" xml:space="preserve">
    <value>One</value>
  </data>
  <data name="ControllerIndex_Three" xml:space="preserve">
    <value>Three</value>
  </data>
  <data name="ControllerIndex_Two" xml:space="preserve">
    <value>Two</value>
  </data>
  <data name="ContextMenu_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="ContextMenu_LowBatteryWarningSound" xml:space="preserve">
    <value>Empty battery warning sound</value>
  </data>
  <data name="ContextMenu_LowBatteryWarningSound_Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ContextMenu_LowBatteryWarningSound_Loop_Enabled" xml:space="preserve">
    <value>Repeat on loop</value>
  </data>
  <data name="PopupSettings_Background" xml:space="preserve">
    <value>Background:</value>
  </data>
  <data name="PopupSettings_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="PopupSettings_Colors" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="PopupSettings_DisplayDuration" xml:space="preserve">
    <value>Display for:</value>
  </data>
  <data name="PopupSettings_Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="PopupSettings_FontSize" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="PopupSettings_Foreground" xml:space="preserve">
    <value>Foreground:</value>
  </data>
  <data name="PopupSettings_Height" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="PopupSettings_Percent" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="PopupSettings_Pixel" xml:space="preserve">
    <value>px</value>
  </data>
  <data name="PopupSettings_Positioning" xml:space="preserve">
    <value>Positioning</value>
  </data>
  <data name="PopupSettings_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="PopupSettings_Seconds" xml:space="preserve">
    <value>sec</value>
  </data>
  <data name="PopupSettings_Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="PopupSettings_Width" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="PopupSettings_X" xml:space="preserve">
    <value>X:</value>
  </data>
  <data name="PopupSettings_Y" xml:space="preserve">
    <value>Y:</value>
  </data>
  <data name="Popup_BatteryLevel" xml:space="preserve">
    <value>Battery level: {0}</value>
  </data>
  <data name="Popup_ControllerName" xml:space="preserve">
    <value>Controller {0}</value>
  </data>
  <data name="ContextMenu_PopupSettings" xml:space="preserve">
    <value>Popup Settings...</value>
  </data>
  <data name="ContextMenu_ShowPopupOnGuide" xml:space="preserve">
    <value>Show Popup on pressing XBox button</value>
  </data>
  <data name="ContextMenu_ShowPopupOnLowBattery" xml:space="preserve">
    <value>Show Popup on low battery</value>
  </data>
  <data name="ContextMenu_ShowToastOnLowBattery" xml:space="preserve">
    <value>Show Toast on low battery</value>
  </data>
  <data name="PopupSettings_FontName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="PopupSettings_FontBold" xml:space="preserve">
    <value>Bold:</value>
  </data>
  <data name="PopupSettings_FontItalic" xml:space="preserve">
    <value>Italic:</value>
  </data>
  <data name="PopupSettings_FontUnderline" xml:space="preserve">
    <value>Underline:</value>
  </data>
  <data name="PopupSettings_Title" xml:space="preserve">
    <value>Battery Level Popup Settings</value>
  </data>
  <data name="ContextMenu_MinorUpdateCheck" xml:space="preserve">
    <value>Also check for minor updates (new languages added)</value>
  </data>
  <data name="ContextMenu_UpdateCheckHeader" xml:space="preserve">
    <value>Update check</value>
  </data>
  <data name="NewMinorVersionAvailable_Body" xml:space="preserve">
    <value>A new minor update for {0} is available (new languages added). Do you want to open the homepage?</value>
  </data>
  <data name="ContextMenu_DisplayedIcons" xml:space="preserve">
    <value>Displayed Controller states</value>
  </data>
  <data name="ContextMenu_ShowWirelessControllersWithKnownBatteryLevel" xml:space="preserve">
    <value>Wireless controllers battery level</value>
  </data>
  <data name="ContextMenu_ShowWirelessControllersWithUnknownBatteryLevel" xml:space="preserve">
    <value>Wireless controllers with unknown battery level</value>
  </data>
  <data name="ContextMenu_ShowWiredControllers" xml:space="preserve">
    <value>Wired controllers</value>
  </data>
  <data name="ContextMenu_Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="About_Group" xml:space="preserve">
    <value>About</value>
  </data>
</root>